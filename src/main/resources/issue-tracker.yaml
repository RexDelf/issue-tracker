openapi: "3.0.0"
info:
  title: Issue Tracker API
  version: 0.3.0
paths:
  /tickets:
    get:
      summary: Get all tickets
      operationId: getAllTickets
      tags:
        - tickets
      responses:
        '200':
          description: A list of TicketDto objects
          content:
            application/json:
              schema:
                $ref: './dto/TicketsDto.yaml'
    post:
      summary: Create a new ticket
      operationId: createTicket
      tags:
        - tickets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './dto/TicketPostDto.yaml'
      responses:
        201:
          description: Ticket created successfully
          content:
            application/json:
              schema:
                $ref: './dto/TicketPostResponseDto.yaml'
  /tickets/{id}:
    get:
      summary: Get ticket by ID
      operationId: getTicket
      tags:
        - tickets
      parameters:
        - name: id
          in: path
          description: Ticket ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './dto/TicketDto.yaml'
        '404':
          description: Ticket for the specified id not found
          content:
            text/plain:
              schema:
                type: string
    patch:
      summary: Update ticket by ID
      description: Apply a Patch to a Ticket with the specified ID.
      operationId: updateTicket
      tags:
        - tickets
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the Ticket to be patched.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './dto/TicketPatchDto.yaml'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './dto/TicketDto.yaml'
        '404':
          description: Ticket for the specified id not found
          content:
            text/plain:
              schema:
                type: string
  /tickets/json-patch/{id}:
    patch:
      summary: Update ticket by ID
      description: Apply a JSON Patch to a Ticket with the specified ID.
      operationId: jsonPatchTicket
      tags:
        - tickets
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the Ticket to be patched.
      requestBody:
        required: true
        content:
          application/json-patch+json:
            schema:
              $ref: './dto/JsonPatchWrapper.yaml'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './dto/TicketDto.yaml'
        '404':
          description: Ticket for the specified id not found
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
  /sprints:
    get:
      summary: Get all sprints
      operationId: getAllSprints
      tags:
        - sprints
      parameters:
        - in: query
          name: date
          required: false
          schema:
            type: string
            format: date
          description: Get the sprint that falls on the specified date
      responses:
        '200':
          description: A list of SprintDto objects
          content:
            application/json:
              schema:
                $ref: './dto/SprintsDto.yaml'
    post:
      summary: Create a new sprint
      operationId: createSprint
      tags:
        - sprints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './dto/SprintPostDto.yaml'
      responses:
        201:
          description: Sprint created successfully
          content:
            application/json:
              schema:
                $ref: './dto/SprintDto.yaml'
        400:
          description: Provided request contains illegal arguments
          content:
            text/plain:
              schema:
                type: string
  /sprints/{id}:
    patch:
      summary: Update sprint by ID
      description: Apply a Patch to a Sprint with the specified ID.
      operationId: updateSprint
      tags:
        - sprints
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the Sprint to be patched.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './dto/SprintPatchDto.yaml'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './dto/SprintDto.yaml'
        '404':
          description: Sprint for the specified id not found
          content:
            text/plain:
              schema:
                type: string
        '409':
          description: Can't modify sprint
          content:
            text/plain:
              schema:
                type: string
    get:
      summary: Get sprint by ID
      operationId: getSprint
      tags:
        - sprints
      parameters:
        - name: id
          in: path
          description: Sprint ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './dto/SprintDto.yaml'
        '404':
          description: Sprint for the specified id not found
          content:
            text/plain:
              schema:
                type: string
    delete:
      summary: Delete sprint by id
      operationId: deleteSprint
      tags:
        - sprints
      parameters:
        - name: id
          in: path
          description: Sprint ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: OK
        '404':
          description: Sprint for the specified id not found
          content:
            text/plain:
              schema:
                type: string
        '409':
          description: Can't delete completed or active sprints
          content:
            text/plain:
              schema:
                type: string